<?php

namespace $NAMESPACE_CONTROLLER$;

use $NAMESPACE_DATATABLES$\$MODEL_NAME$DataTable;
use App\Http\Controllers\Controller;
use $NAMESPACE_REQUEST$\Create$MODEL_NAME$Request;
use $NAMESPACE_REQUEST$\Update$MODEL_NAME$Request;
use $NAMESPACE_MODEL$\$MODEL_NAME$;
use App\Services\Http\Response\APIResponse;
use App\Services\Model\Traits\CrudService;
use Illuminate\Http\JsonResponse;
use Illuminate\Contracts\View\View;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\DB;

class $MODEL_NAME$Controller extends Controller
{
    use CrudService;

    public function index(Request $request, $MODEL_NAME$DataTable $$MODEL_NAME_CAMEL$DataTable)
    {
        return $$MODEL_NAME_CAMEL$DataTable->render('$VIEW_PREFIX$$MODEL_NAME_PLURAL_SNAKE$.index');
    }

    public function create(): View
    {
        $$MODEL_NAME_CAMEL$ = new $MODEL_NAME$();
        return view('$VIEW_PREFIX$$MODEL_NAME_PLURAL_SNAKE$.create', compact('$MODEL_NAME_CAMEL$'));
    }

    public function store(Create$MODEL_NAME$Request $request): JsonResponse
    {
        DB::transaction(function () use ($request) {
            $this->save($request->validated(), new $MODEL_NAME$());
        });

        return APIResponse::build()
            ->status('success')
            ->statusCode(201)
            ->message('$MODEL_NAME_HUMAN$ added successfully!')
            ->redirectTo(route('$ROUTE_NAMED_PREFIX$$MODEL_NAME_PLURAL_CAMEL$.index'))
            ->send();
    }

    public function show($MODEL_NAME$ $$MODEL_NAME_CAMEL$): View
    {
        return view('$VIEW_PREFIX$$MODEL_NAME_PLURAL_SNAKE$.show', compact('$MODEL_NAME_CAMEL$'));
    }

    public function edit($MODEL_NAME$ $$MODEL_NAME_CAMEL$): View
    {
        return view('$VIEW_PREFIX$$MODEL_NAME_PLURAL_SNAKE$.edit', compact('$MODEL_NAME_CAMEL$'));
    }

    public function update($MODEL_NAME$ $$MODEL_NAME_CAMEL$, Update$MODEL_NAME$Request $request): JsonResponse
    {
        DB::transaction(function () use ($request, $$MODEL_NAME_CAMEL$) {
            $this->save($request->validated(), $$MODEL_NAME_CAMEL$);
        });

        return APIResponse::build()
            ->status('success')
            ->message('$MODEL_NAME_HUMAN$ updated successfully!')
            ->redirectTo(route('$ROUTE_NAMED_PREFIX$$MODEL_NAME_PLURAL_CAMEL$.index'))
            ->send();
    }

    public function destroy($MODEL_NAME$ $$MODEL_NAME_CAMEL$): JsonResponse
    {
        $$MODEL_NAME_CAMEL$->delete();

        return APIResponse::build()
            ->status('success')
            ->message('$MODEL_NAME_HUMAN$ deleted successfully!')
            ->refreshDataTable('#' . $MODEL_NAME$DataTable::TABLE_ID)
            ->send();
    }
}
